function lineDistance(t,e){var n=0,o=0;return n=e.x-t.x,n*=n,o=e.y-t.y,o*=o,Math.sqrt(n+o)}var sound=new Howl({urls:["../sounds/maggie_breath.mp3"],autoplay:!0,loop:!0,volume:.5,onend:function(){console.log("Finished!")}});"undefined"==typeof Number.prototype.toRad&&(Number.prototype.toRad=function(){return this*Math.PI/180}),$(function(t){var e=0,n=0,o=0,a=0,i=70,p=14;t(window).mousemove(function(r){var s=t("#left").offset();e=Math.min(r.pageX-s.left,i),n=Math.min(r.pageY-s.top,p),0>e&&(e=0),0>n&&(n=0);var c=t("#right").offset();o=Math.min(r.pageX-c.left,i),a=Math.min(r.pageY-c.top,p),0>o&&(o=0),0>a&&(a=0);var l=new Object,u=new Object;l.x=r.pageX,l.y=r.pageY,u.x=t(window).width()/2,u.y=t(window).height()/2;var f=lineDistance(l,u);percDistance=f/(t(window).width()/2)*100,percDistance>100&&(percDistance=100),topVal=205+.5*percDistance,t(".mond").css({top:topVal+"px"})});{var r=t("#leftpupil"),s=0,c=0,l=(setInterval(function(){s+=(e-s)/1,c+=(n-c)/1,r.css({left:s,top:c})},30),t("#rightpupil")),s=0,c=0;setInterval(function(){s+=(o-s)/1,c+=(a-c)/1,l.css({left:s,top:c})},30)}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibWFpbi5qcyJdLCJuYW1lcyI6WyJsaW5lRGlzdGFuY2UiLCJwb2ludDEiLCJwb2ludDIiLCJ4cyIsInlzIiwieCIsInkiLCJNYXRoIiwic3FydCIsInNvdW5kIiwiSG93bCIsInVybHMiLCJhdXRvcGxheSIsImxvb3AiLCJ2b2x1bWUiLCJvbmVuZCIsImNvbnNvbGUiLCJsb2ciLCJOdW1iZXIiLCJwcm90b3R5cGUiLCJ0b1JhZCIsInRoaXMiLCJQSSIsIiQiLCJtb3VzZVhMZWZ0IiwibW91c2VZTGVmdCIsIm1vdXNlWFJpZ2h0IiwibW91c2VZUmlnaHQiLCJsaW1pdFgiLCJsaW1pdFkiLCJ3aW5kb3ciLCJtb3VzZW1vdmUiLCJlIiwib2Zmc2V0TGVmdCIsIm9mZnNldCIsIm1pbiIsInBhZ2VYIiwibGVmdCIsInBhZ2VZIiwidG9wIiwib2Zmc2V0UmlnaHQiLCJtb3VzZVBvaW50ZXIiLCJPYmplY3QiLCJtb3V0aCIsIndpZHRoIiwiaGVpZ2h0IiwiZGlzdGFuY2UiLCJwZXJjRGlzdGFuY2UiLCJ0b3BWYWwiLCJjc3MiLCJsZWZ0UHVwaWwiLCJ4cCIsInlwIiwicmlnaHRQdXBpbCIsInNldEludGVydmFsIl0sIm1hcHBpbmdzIjoiQUFrQkEsUUFBU0EsY0FBYUMsRUFBUUMsR0FDMUIsR0FBSUMsR0FBSyxFQUNMQyxFQUFLLENBUVQsT0FOQUQsR0FBS0QsRUFBT0csRUFBSUosRUFBT0ksRUFDdkJGLEdBQVVBLEVBRVZDLEVBQUtGLEVBQU9JLEVBQUlMLEVBQU9LLEVBQ3ZCRixHQUFVQSxFQUVIRyxLQUFLQyxLQUFLTCxFQUFLQyxHQTNCMUIsR0FBSUssT0FBUSxHQUFJQyxPQUNaQyxNQUFPLCtCQUNQQyxVQUFVLEVBQ1ZDLE1BQU0sRUFDTkMsT0FBUSxHQUNSQyxNQUFPLFdBQ0hDLFFBQVFDLElBQUksZUFLbUIsb0JBQTVCQyxRQUFPQyxVQUFlLFFBQzdCRCxPQUFPQyxVQUFVQyxNQUFRLFdBQ3JCLE1BQU9DLE1BQU9kLEtBQUtlLEdBQUssTUFpQmhDQyxFQUFFLFNBQVVBLEdBRVIsR0FBSUMsR0FBYSxFQUFHQyxFQUFhLEVBQUdDLEVBQWMsRUFBR0MsRUFBYyxFQUFHQyxFQUFTLEdBQUlDLEVBQVMsRUFJNUZOLEdBQUVPLFFBQVFDLFVBQVUsU0FBVUMsR0FFMUIsR0FBSUMsR0FBYVYsRUFBRSxTQUFTVyxRQUM1QlYsR0FBYWpCLEtBQUs0QixJQUFJSCxFQUFFSSxNQUFRSCxFQUFXSSxLQUFNVCxHQUNqREgsRUFBYWxCLEtBQUs0QixJQUFJSCxFQUFFTSxNQUFRTCxFQUFXTSxJQUFLVixHQUMvQixFQUFiTCxJQUFnQkEsRUFBYSxHQUNoQixFQUFiQyxJQUFnQkEsRUFBYSxFQUVqQyxJQUFJZSxHQUFjakIsRUFBRSxVQUFVVyxRQUM5QlIsR0FBY25CLEtBQUs0QixJQUFJSCxFQUFFSSxNQUFRSSxFQUFZSCxLQUFNVCxHQUNuREQsRUFBY3BCLEtBQUs0QixJQUFJSCxFQUFFTSxNQUFRRSxFQUFZRCxJQUFLVixHQUNoQyxFQUFkSCxJQUFpQkEsRUFBYyxHQUNqQixFQUFkQyxJQUFpQkEsRUFBYyxFQUVuQyxJQUFJYyxHQUFlLEdBQUlDLFFBQ25CQyxFQUFRLEdBQUlELE9BRWhCRCxHQUFnQixFQUFJVCxFQUFFSSxNQUN0QkssRUFBZ0IsRUFBSVQsRUFBRU0sTUFFdEJLLEVBQVMsRUFBSXBCLEVBQUVPLFFBQVFjLFFBQVUsRUFDakNELEVBQVMsRUFBSXBCLEVBQUVPLFFBQVFlLFNBQVcsQ0FFbEMsSUFBSUMsR0FBVzlDLGFBQWF5QyxFQUFjRSxFQUMxQ0ksY0FBZUQsR0FBWXZCLEVBQUVPLFFBQVFjLFFBQVUsR0FBSyxJQUVoREcsYUFBZSxNQUNmQSxhQUFlLEtBR25CQyxPQUFTLElBQU8sR0FBV0QsYUFFM0J4QixFQUFFLFNBQVMwQixLQUNQVixJQUFPUyxPQUFTLFFBSXhCLEVBQUEsR0FBSUUsR0FBWTNCLEVBQUUsY0FBZTRCLEVBQUssRUFBR0MsRUFBSyxFQU8xQ0MsR0FOV0MsWUFBWSxXQUNuQkgsSUFBTzNCLEVBQWEyQixHQUFNLEVBQzFCQyxJQUFPM0IsRUFBYTJCLEdBQU0sRUFFMUJGLEVBQVVELEtBQUtaLEtBQU1jLEVBQUlaLElBQUthLEtBQy9CLElBQ1U3QixFQUFFLGdCQUFnQjRCLEVBQUssRUFBR0MsRUFBSyxDQUNoQ0UsYUFBWSxXQUNwQkgsSUFBT3pCLEVBQWN5QixHQUFNLEVBQzNCQyxJQUFPekIsRUFBY3lCLEdBQU0sRUFFM0JDLEVBQVdKLEtBQUtaLEtBQU1jLEVBQUlaLElBQUthLEtBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3VwIHN1cFxudmFyIHNvdW5kID0gbmV3IEhvd2woe1xuICAgIHVybHM6IFsnLi4vc291bmRzL21hZ2dpZV9icmVhdGgubXAzJ10sXG4gICAgYXV0b3BsYXk6IHRydWUsXG4gICAgbG9vcDogdHJ1ZSxcbiAgICB2b2x1bWU6IDAuNSxcbiAgICBvbmVuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnRmluaXNoZWQhJyk7XG4gICAgfVxufSk7XG5cbi8qKiBDb252ZXJ0cyBudW1lcmljIGRlZ3JlZXMgdG8gcmFkaWFucyAqL1xuaWYgKHR5cGVvZihOdW1iZXIucHJvdG90eXBlLnRvUmFkKSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIE51bWJlci5wcm90b3R5cGUudG9SYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzICogTWF0aC5QSSAvIDE4MDtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGxpbmVEaXN0YW5jZShwb2ludDEsIHBvaW50Mikge1xuICAgIHZhciB4cyA9IDA7XG4gICAgdmFyIHlzID0gMDtcblxuICAgIHhzID0gcG9pbnQyLnggLSBwb2ludDEueDtcbiAgICB4cyA9IHhzICogeHM7XG5cbiAgICB5cyA9IHBvaW50Mi55IC0gcG9pbnQxLnk7XG4gICAgeXMgPSB5cyAqIHlzO1xuXG4gICAgcmV0dXJuIE1hdGguc3FydCh4cyArIHlzKTtcbn1cblxuJChmdW5jdGlvbiAoJCkge1xuXG4gICAgdmFyIG1vdXNlWExlZnQgPSAwLCBtb3VzZVlMZWZ0ID0gMCwgbW91c2VYUmlnaHQgPSAwLCBtb3VzZVlSaWdodCA9IDAsIGxpbWl0WCA9IDcwLCBsaW1pdFkgPSAxNDtcbi8vICAgIGluaXRpYWxpemluZyBidXQgbm90IHVzZWRcbiAgICB2YXIgYW5nLCBpID0gMDtcblxuICAgICQod2luZG93KS5tb3VzZW1vdmUoZnVuY3Rpb24gKGUpIHtcblxuICAgICAgICB2YXIgb2Zmc2V0TGVmdCA9ICQoJyNsZWZ0Jykub2Zmc2V0KCk7XG4gICAgICAgIG1vdXNlWExlZnQgPSBNYXRoLm1pbihlLnBhZ2VYIC0gb2Zmc2V0TGVmdC5sZWZ0LCBsaW1pdFgpO1xuICAgICAgICBtb3VzZVlMZWZ0ID0gTWF0aC5taW4oZS5wYWdlWSAtIG9mZnNldExlZnQudG9wLCBsaW1pdFkpO1xuICAgICAgICBpZiAobW91c2VYTGVmdCA8IDApIG1vdXNlWExlZnQgPSAwO1xuICAgICAgICBpZiAobW91c2VZTGVmdCA8IDApIG1vdXNlWUxlZnQgPSAwO1xuXG4gICAgICAgIHZhciBvZmZzZXRSaWdodCA9ICQoJyNyaWdodCcpLm9mZnNldCgpO1xuICAgICAgICBtb3VzZVhSaWdodCA9IE1hdGgubWluKGUucGFnZVggLSBvZmZzZXRSaWdodC5sZWZ0LCBsaW1pdFgpO1xuICAgICAgICBtb3VzZVlSaWdodCA9IE1hdGgubWluKGUucGFnZVkgLSBvZmZzZXRSaWdodC50b3AsIGxpbWl0WSk7XG4gICAgICAgIGlmIChtb3VzZVhSaWdodCA8IDApIG1vdXNlWFJpZ2h0ID0gMDtcbiAgICAgICAgaWYgKG1vdXNlWVJpZ2h0IDwgMCkgbW91c2VZUmlnaHQgPSAwO1xuXG4gICAgICAgIHZhciBtb3VzZVBvaW50ZXIgPSBuZXcgT2JqZWN0LFxuICAgICAgICAgICAgbW91dGggPSBuZXcgT2JqZWN0O1xuXG4gICAgICAgIG1vdXNlUG9pbnRlclsneCddID0gZS5wYWdlWDtcbiAgICAgICAgbW91c2VQb2ludGVyWyd5J10gPSBlLnBhZ2VZO1xuXG4gICAgICAgIG1vdXRoWyd4J10gPSAkKHdpbmRvdykud2lkdGgoKSAvIDI7XG4gICAgICAgIG1vdXRoWyd5J10gPSAkKHdpbmRvdykuaGVpZ2h0KCkgLyAyO1xuXG4gICAgICAgIHZhciBkaXN0YW5jZSA9IGxpbmVEaXN0YW5jZShtb3VzZVBvaW50ZXIsIG1vdXRoKTtcbiAgICAgICAgcGVyY0Rpc3RhbmNlID0gZGlzdGFuY2UgLyAoJCh3aW5kb3cpLndpZHRoKCkgLyAyKSAqIDEwMDtcblxuICAgICAgICBpZiAocGVyY0Rpc3RhbmNlID4gMTAwKSB7XG4gICAgICAgICAgICBwZXJjRGlzdGFuY2UgPSAxMDA7XG4gICAgICAgIH1cblxuICAgICAgICB0b3BWYWwgPSAyMDUgKyAoNTAgLyAxMDAgKiBwZXJjRGlzdGFuY2UpO1xuXG4gICAgICAgICQoJy5tb25kJykuY3NzKHtcbiAgICAgICAgICAgICd0b3AnOiB0b3BWYWwgKyBcInB4XCJcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB2YXIgbGVmdFB1cGlsID0gJCgnI2xlZnRwdXBpbCcpLCB4cCA9IDAsIHlwID0gMCxcbiAgICAgICAgbGVmdExvb3AgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB4cCArPSAobW91c2VYTGVmdCAtIHhwKSAvIDE7XG4gICAgICAgICAgICB5cCArPSAobW91c2VZTGVmdCAtIHlwKSAvIDE7XG4vLyAgICAgICAgICAgIGxlZnRQdXBpbC5jc3Moe2xlZnQ6IChyYW5kb21GbG9hdEJldHdlZW4oLTUsIDUsMSkgKyB4cCksIHRvcDogKHJhbmRvbUZsb2F0QmV0d2VlbigtNSwgNSwxKSArIHlwKX0pO1xuICAgICAgICAgICAgbGVmdFB1cGlsLmNzcyh7bGVmdDogeHAsIHRvcDogeXB9KTtcbiAgICAgICAgfSwgMzApO1xuICAgIHZhciByaWdodFB1cGlsID0gJCgnI3JpZ2h0cHVwaWwnKSwgeHAgPSAwLCB5cCA9IDAsXG4gICAgICAgIHJpZ2h0TG9vcCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHhwICs9IChtb3VzZVhSaWdodCAtIHhwKSAvIDE7XG4gICAgICAgICAgICB5cCArPSAobW91c2VZUmlnaHQgLSB5cCkgLyAxO1xuLy8gICAgICAgICAgICByaWdodFB1cGlsLmNzcyh7bGVmdDogKHJhbmRvbUZsb2F0QmV0d2VlbigtNSwgNSwxKSArIHhwKSwgdG9wOiAocmFuZG9tRmxvYXRCZXR3ZWVuKC01LCA1LDEpICsgeXApfSk7XG4gICAgICAgICAgICByaWdodFB1cGlsLmNzcyh7bGVmdDogeHAsIHRvcDogeXB9KTtcbiAgICAgICAgfSwgMzApO1xuXG4gICAgLy8gUmFuZG9tIGZsb2F0IGJldHdlZW5cbiAgICBmdW5jdGlvbiByYW5kb21GbG9hdEJldHdlZW4obWluVmFsdWUsIG1heFZhbHVlLCBwcmVjaXNpb24pIHtcbiAgICAgICAgaWYgKHR5cGVvZihwcmVjaXNpb24pID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBwcmVjaXNpb24gPSAyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KE1hdGgubWluKG1pblZhbHVlICsgKE1hdGgucmFuZG9tKCkgKiAobWF4VmFsdWUgLSBtaW5WYWx1ZSkpLCBtYXhWYWx1ZSkudG9GaXhlZChwcmVjaXNpb24pKTtcbiAgICB9XG59KTtcblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9